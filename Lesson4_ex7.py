# Реализовать генератор с помощью функции с ключевым словом yield,
# создающим очередное значение. При вызове функции должен создаваться объект-генератор.
# Функция вызывается следующим образом: for el in fact(n). Она отвечает за получение факториала числа.
# В цикле нужно выводить только первые n чисел, начиная с 1! и до n!.
# Подсказка: факториал числа n — произведение чисел от 1 до n.
# Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.

# импортируем функцию reduce из библиотеки functools
from functools import reduce


# Вариант 1
# создадим функцию-генератор для факториала числа n
def fact(n):
    yield reduce(lambda x, y: x * y, (i for i in range(1, n + 1)))


# число до которого вычисляем факториал
n = 5
print("Вариант 1")

# выводим результат
for el in fact(n):
    print(f"Факториал числа {n}! = {el}")


# Вариант 2
# создадим функцию-генератор для факториала числа n
def fact_ver2(n):
    i = 1                      # переменнная, в которой хранится фактриал числа n
    for f in range(1, n + 1):  # проходим циклом по всем значениям n
        i *= f                 # находим фактриал n
        yield i                # возвращаем результат


for el in fact_ver2(n):        # используем функцию-итератор для получения результата
    pass

print("Вариант 2")

# выводим результат
print(f"Факториал числа {n}! = {el}")
